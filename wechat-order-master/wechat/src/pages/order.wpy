<style lang="less">

</style>
<template>
    <view>
      <view class="cart-control" @tap="closeList()">
        <SearchBar type="tag"  :placeholder="searchText" @search.user="searchFood" @clear.user="clearSearch"></SearchBar>
        <view class="sort">
            <view @tap="sortStar" class="sort-item {{currentSortRule == 'star' ? 'selectSort' : ''}}">好评优先 <text class="iconfont {{starSortIcon}}"></text></view>
            <view @tap="sortPrice" class="sort-item {{currentSortRule == 'price' ? 'selectSort' : ''}}">价格优先 <text class="iconfont {{priceSortIcon}}"></text></view>
        </view>
      <!--主内容区域-->
        <view wx:if="{{init}}" class="main-box row">
          <SideTab :tab.sync="categories"  @change.user="switchTab"/>
          <foodList
            :toView.sync="selectView" class="goods-box"
            :list.sync="foodList"
            @scroll.user="scrollSit"
            :chooseList.sync="choosedList"
            :catList.sync="categoriesList"
            :dealList.sync="dealList">
          </foodList>
        </view>

        <view wx:else>
          敬请期待
        </view>
      </view>
      <Cart @clear.user="clear" :flag.sync="cartShow" :chooseList.sync="choosedList"  :list.sync="foodList" :catList.sync="categoriesList"  :dealList.sync="dealList"></Cart>
    </view>
</template>

<script>
  import wepy from 'wepy'
  import SideTab from '../components/side_tab'
  import imageList from '../components/imageList'
  import SearchBar from '../components/searchbar'
  import Cart from '../components/cart'
  import base from '../mixins/base'
  import http from '../mixins/http'
  import foodList from '../components/foodList'
  import icon from '../components/icon'

import { getStore } from 'wepy-redux'

const store = getStore()

  export default class order extends wepy.page {
    mixins = [base, http]
    config = {
      navigationBarTitleText: '订餐服务'
    }
    components = {
      SideTab:SideTab,
      imageList:imageList,
      foodList:foodList,
      SearchBar:SearchBar,
      Cart:Cart,
      icon:icon
    }

    mixins = []

    data = {
      init:true,
      cartShow:false,
      searchText:'请输入商品名称',
      categories: {},
      categoriesList:[],
      foodList:[],
      selectedId:1,
      choosedList:[], //购物车选中的菜品
      dealList:[], //deal cart data
      currentPriceSort:1,
      currentStarSort:1,
      currentSortRule:'',
      priceSortIcon:'icon-paixu-shuliangshengxu',
      starSortIcon:'icon-dianzan',
      selectView:'a1'
    }

    computed = {
    }

    methods = {
      // 点击分类
      switchTab(selectedId) {
        this.selectedId = selectedId;
        this.selectView =   'a'+selectedId
      },
      scrollSit(res){
        this.categories.selectedId = this.foodList[res].cat;
      },
      searchFood(res){
        if(res){
           this.foodList.map((item)=>{
             if(item.name.indexOf(res) > -1){
               item.filter = false ;
             }else{
               item.filter = true ;
             }
          });
        }else{
          this.getFoodList()
        }
      },
      clearSearch(res){
          this.foodList.map((item)=>{
             item.filter = false ;
          });
      },
      clear(){
          this.getFoodList()
      },
      closeList(){
        this.cartShow = false;
      },
      // 价格优先
      sortPrice(){
        let flag = this.currentPriceSort ;
        this.foodList = this.foodList.sort((a,b)=>{
          return flag == 1 ? a.price > b.price : a.price < b.price;
        });
        this.priceSortIcon = flag == 1 ? 'icon-paixu-shuliangshengxu' : 'icon-paixu-shuliangjiangxu' ;
        this.currentPriceSort = (flag == 1) ? 2 : 1 ;
        this.currentSortRule = 'price';
        this.categories.selectedId = this.foodList[0].cat;

      },
      // 好评优先
      sortStar(){
        let flag = this.currentStarSort ;
        this.foodList = this.foodList.sort((a,b)=>{
          return flag == 1 ? a.star < b.star :a.star > b.star;
        });
        this.starSortIcon = flag == 1 ? 'icon-dianzan' : 'icon-z-nolike' ;
        this.currentStarSort = flag == 1 ? 2 : 1 ;
        this.currentSortRule = 'star';
        this.categories.selectedId = this.foodList[0].cat;

      }
    }

    events = {

    }

    onLoad(options) {
      if(options.list){

      }else{
        this.initPage()
      }
    }
    onShow() {
      console.log("user",store,"111",wepy.$instance.globalData)
    }
    initPage(){
      this.getFoodList();
      this.getCat();
    }
    search(){
      wx.navigateTo({
          url: '/pages/searchTag'
        })
    }
    async getFoodList(){
      var url = "http://yapi.demo.qunar.com/mock/16780/food/get_food"
      wepy.request({url:url,method: 'POST'}).then((res) => {
        res.data.map((item)=>{
          item.sum = 0 ;
          item.fliter = true ;
        })
        this.foodList = res.data
        this.foodList = this.foodList.sort((a,b)=>{
          return a.cat > b.cat;
        })
        // this.foodList = res.data.filter((item)=>{return item.cat == this.selectedId});
        this.$apply();
      })
    }
    async getCat(){
      var url = "http://yapi.demo.qunar.com/mock/16780/food/get_food_cat"
      wepy.request({url:url,method: 'POST'}).then((res) => {
        this.categories.list = res.data;
        this.categoriesList = res.data ;
        this.categories.selectedId = this.selectedId;
        this.$apply();
      })
    }
  }
</script>
<style lang="less">
.weui-search-bar{
  background-color: #fb7299 !important;
}
.sort{
  height:40px;
  background-color: #fff;
  .sort-item{
    display:inline-block;
    width:50%;
    text-align:center;
    font-size:14px;
    line-height:26px;
    margin-top:7px;
    box-sizing:border-box;
  }
  .sort-item:first-child{
    border-right:1px solid #fb7299;
  }
}
.main-box{
  display:flex;
  width: 100%;
  position: absolute;
  top: 95px;
  bottom: 50px;
  .goods-box{
    flex: 1;
    height: 100%;
  }
  }
.selectSort{
  color:#fb7299;
}
</style>

